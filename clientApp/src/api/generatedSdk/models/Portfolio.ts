/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AggregatedAsset } from './AggregatedAsset';
import {
    AggregatedAssetFromJSON,
    AggregatedAssetFromJSONTyped,
    AggregatedAssetToJSON,
} from './AggregatedAsset';

/**
 * 
 * @export
 * @interface Portfolio
 */
export interface Portfolio {
    /**
     * 
     * @type {Array<AggregatedAsset>}
     * @memberof Portfolio
     */
    holdings: Array<AggregatedAsset>;
    /**
     * 
     * @type {number}
     * @memberof Portfolio
     */
    totalInvested: number;
    /**
     * 
     * @type {number}
     * @memberof Portfolio
     */
    currentValue: number;
}

/**
 * Check if a given object implements the Portfolio interface.
 */
export function instanceOfPortfolio(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "holdings" in value;
    isInstance = isInstance && "totalInvested" in value;
    isInstance = isInstance && "currentValue" in value;

    return isInstance;
}

export function PortfolioFromJSON(json: any): Portfolio {
    return PortfolioFromJSONTyped(json, false);
}

export function PortfolioFromJSONTyped(json: any, ignoreDiscriminator: boolean): Portfolio {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'holdings': ((json['holdings'] as Array<any>).map(AggregatedAssetFromJSON)),
        'totalInvested': json['totalInvested'],
        'currentValue': json['currentValue'],
    };
}

export function PortfolioToJSON(value?: Portfolio | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'holdings': ((value.holdings as Array<any>).map(AggregatedAssetToJSON)),
        'totalInvested': value.totalInvested,
        'currentValue': value.currentValue,
    };
}

