/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AggregatedAsset
 */
export interface AggregatedAsset {
    /**
     * 
     * @type {string}
     * @memberof AggregatedAsset
     */
    cryptoTicker: string;
    /**
     * 
     * @type {number}
     * @memberof AggregatedAsset
     */
    currentPrice?: number | null;
    /**
     * 
     * @type {number}
     * @memberof AggregatedAsset
     */
    totalCoinsOwned: number;
    /**
     * 
     * @type {number}
     * @memberof AggregatedAsset
     */
    totalInvestedIncludingFees: number;
    /**
     * 
     * @type {number}
     * @memberof AggregatedAsset
     */
    currentValue?: number | null;
    /**
     * 
     * @type {number}
     * @memberof AggregatedAsset
     */
    portfolioPercentage: number;
    /**
     * 
     * @type {number}
     * @memberof AggregatedAsset
     */
    costBasis: number;
}

/**
 * Check if a given object implements the AggregatedAsset interface.
 */
export function instanceOfAggregatedAsset(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cryptoTicker" in value;
    isInstance = isInstance && "totalCoinsOwned" in value;
    isInstance = isInstance && "totalInvestedIncludingFees" in value;
    isInstance = isInstance && "portfolioPercentage" in value;
    isInstance = isInstance && "costBasis" in value;

    return isInstance;
}

export function AggregatedAssetFromJSON(json: any): AggregatedAsset {
    return AggregatedAssetFromJSONTyped(json, false);
}

export function AggregatedAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): AggregatedAsset {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cryptoTicker': json['cryptoTicker'],
        'currentPrice': !exists(json, 'currentPrice') ? undefined : json['currentPrice'],
        'totalCoinsOwned': json['totalCoinsOwned'],
        'totalInvestedIncludingFees': json['totalInvestedIncludingFees'],
        'currentValue': !exists(json, 'currentValue') ? undefined : json['currentValue'],
        'portfolioPercentage': json['portfolioPercentage'],
        'costBasis': json['costBasis'],
    };
}

export function AggregatedAssetToJSON(value?: AggregatedAsset | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cryptoTicker': value.cryptoTicker,
        'currentPrice': value.currentPrice,
        'totalCoinsOwned': value.totalCoinsOwned,
        'totalInvestedIncludingFees': value.totalInvestedIncludingFees,
        'currentValue': value.currentValue,
        'portfolioPercentage': value.portfolioPercentage,
        'costBasis': value.costBasis,
    };
}

