/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SingleTransaction } from './SingleTransaction';
import {
    SingleTransactionFromJSON,
    SingleTransactionFromJSONTyped,
    SingleTransactionToJSON,
} from './SingleTransaction';

/**
 * 
 * @export
 * @interface AddTransactionsRequest
 */
export interface AddTransactionsRequest {
    /**
     * 
     * @type {Array<SingleTransaction>}
     * @memberof AddTransactionsRequest
     */
    transactions: Array<SingleTransaction>;
    /**
     * 
     * @type {boolean}
     * @memberof AddTransactionsRequest
     */
    deleteExistingTransactions: boolean;
}

/**
 * Check if a given object implements the AddTransactionsRequest interface.
 */
export function instanceOfAddTransactionsRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "transactions" in value;
    isInstance = isInstance && "deleteExistingTransactions" in value;

    return isInstance;
}

export function AddTransactionsRequestFromJSON(json: any): AddTransactionsRequest {
    return AddTransactionsRequestFromJSONTyped(json, false);
}

export function AddTransactionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddTransactionsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactions': ((json['transactions'] as Array<any>).map(SingleTransactionFromJSON)),
        'deleteExistingTransactions': json['deleteExistingTransactions'],
    };
}

export function AddTransactionsRequestToJSON(value?: AddTransactionsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactions': ((value.transactions as Array<any>).map(SingleTransactionToJSON)),
        'deleteExistingTransactions': value.deleteExistingTransactions,
    };
}

